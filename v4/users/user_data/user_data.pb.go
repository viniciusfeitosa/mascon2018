// Code generated by protoc-gen-go. DO NOT EDIT.
// source: user_data.proto

/*
Package user_data is a generated protocol buffer package.

It is generated from these files:
	user_data.proto

It has these top-level messages:
	UserDataRequest
	UserDataResponse
*/
package user_data

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type UserDataRequest struct {
	Id int32 `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
}

func (m *UserDataRequest) Reset()                    { *m = UserDataRequest{} }
func (m *UserDataRequest) String() string            { return proto.CompactTextString(m) }
func (*UserDataRequest) ProtoMessage()               {}
func (*UserDataRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *UserDataRequest) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

type UserDataResponse struct {
	Id    int32  `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	Name  string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	Email string `protobuf:"bytes,3,opt,name=email" json:"email,omitempty"`
}

func (m *UserDataResponse) Reset()                    { *m = UserDataResponse{} }
func (m *UserDataResponse) String() string            { return proto.CompactTextString(m) }
func (*UserDataResponse) ProtoMessage()               {}
func (*UserDataResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *UserDataResponse) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *UserDataResponse) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *UserDataResponse) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func init() {
	proto.RegisterType((*UserDataRequest)(nil), "UserDataRequest")
	proto.RegisterType((*UserDataResponse)(nil), "UserDataResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for GetUserData service

type GetUserDataClient interface {
	GetUser(ctx context.Context, in *UserDataRequest, opts ...grpc.CallOption) (*UserDataResponse, error)
}

type getUserDataClient struct {
	cc *grpc.ClientConn
}

func NewGetUserDataClient(cc *grpc.ClientConn) GetUserDataClient {
	return &getUserDataClient{cc}
}

func (c *getUserDataClient) GetUser(ctx context.Context, in *UserDataRequest, opts ...grpc.CallOption) (*UserDataResponse, error) {
	out := new(UserDataResponse)
	err := grpc.Invoke(ctx, "/GetUserData/GetUser", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for GetUserData service

type GetUserDataServer interface {
	GetUser(context.Context, *UserDataRequest) (*UserDataResponse, error)
}

func RegisterGetUserDataServer(s *grpc.Server, srv GetUserDataServer) {
	s.RegisterService(&_GetUserData_serviceDesc, srv)
}

func _GetUserData_GetUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UserDataRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GetUserDataServer).GetUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/GetUserData/GetUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GetUserDataServer).GetUser(ctx, req.(*UserDataRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _GetUserData_serviceDesc = grpc.ServiceDesc{
	ServiceName: "GetUserData",
	HandlerType: (*GetUserDataServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetUser",
			Handler:    _GetUserData_GetUser_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "user_data.proto",
}

func init() { proto.RegisterFile("user_data.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 154 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x2f, 0x2d, 0x4e, 0x2d,
	0x8a, 0x4f, 0x49, 0x2c, 0x49, 0xd4, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x57, 0x52, 0xe4, 0xe2, 0x0f,
	0x2d, 0x4e, 0x2d, 0x72, 0x49, 0x2c, 0x49, 0x0c, 0x4a, 0x2d, 0x2c, 0x4d, 0x2d, 0x2e, 0x11, 0xe2,
	0xe3, 0x62, 0xca, 0x4c, 0x91, 0x60, 0x54, 0x60, 0xd4, 0x60, 0x0d, 0x62, 0xca, 0x4c, 0x51, 0xf2,
	0xe1, 0x12, 0x40, 0x28, 0x29, 0x2e, 0xc8, 0xcf, 0x2b, 0x4e, 0x45, 0x57, 0x23, 0x24, 0xc4, 0xc5,
	0x92, 0x97, 0x98, 0x9b, 0x2a, 0xc1, 0xa4, 0xc0, 0xa8, 0xc1, 0x19, 0x04, 0x66, 0x0b, 0x89, 0x70,
	0xb1, 0xa6, 0xe6, 0x26, 0x66, 0xe6, 0x48, 0x30, 0x83, 0x05, 0x21, 0x1c, 0x23, 0x7b, 0x2e, 0x6e,
	0xf7, 0xd4, 0x12, 0x98, 0x81, 0x42, 0x06, 0x5c, 0xec, 0x50, 0xae, 0x90, 0x80, 0x1e, 0x9a, 0x4b,
	0xa4, 0x04, 0xf5, 0xd0, 0x2d, 0x56, 0x62, 0x48, 0x62, 0x03, 0x3b, 0xdc, 0x18, 0x10, 0x00, 0x00,
	0xff, 0xff, 0x1e, 0xad, 0x63, 0xec, 0xcb, 0x00, 0x00, 0x00,
}
